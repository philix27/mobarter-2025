// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name AuthCoreAdapter
@_exported import AuthCoreAdapter
import Base58_swift
import ConnectCommon
import Foundation
import ParticleAuthCore
import ParticleNetworkBase
import ParticleNetworkChains
import RxAlamofire
import RxCocoa
import RxSwift
import Swift
import SwiftyJSON
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class AuthCoreAdapter : ConnectCommon.ConnectAdapter {
  public init()
  public var walletType: ConnectCommon.WalletType {
    get
  }
  public var readyState: ConnectCommon.WalletReadyState {
    get
  }
  public func getAccounts() -> [ConnectCommon.Account]
  public func connect<T>(_ config: T?) -> RxSwift.Single<ConnectCommon.Account> where T : ConnectCommon.ConnectConfig
  public func isConnected(publicAddress _: Swift.String) -> Swift.Bool
  public func disconnect(publicAddress _: Swift.String) -> RxSwift.Single<Swift.String>
  public func signAllTransactions(publicAddress: Swift.String, transactions: [Swift.String], chainInfo: ParticleNetworkChains.ChainInfo?) -> RxSwift.Single<[Swift.String]>
  public func signTransaction(publicAddress: Swift.String, transaction: Swift.String, chainInfo: ParticleNetworkChains.ChainInfo?) -> RxSwift.Single<Swift.String>
  public func signMessage(publicAddress: Swift.String, message: Swift.String, chainInfo: ParticleNetworkChains.ChainInfo?) -> RxSwift.Single<Swift.String>
  public func signTypedData(publicAddress: Swift.String, data: Swift.String, chainInfo: ParticleNetworkChains.ChainInfo?) -> RxSwift.Single<Swift.String>
  public func signAndSendTransaction(publicAddress: Swift.String, transaction: Swift.String, feeMode: ParticleNetworkBase.AA.FeeMode, chainInfo: ParticleNetworkChains.ChainInfo?) -> RxSwift.Single<Swift.String>
  public func handleUrl(_: Foundation.URL) -> Swift.Bool
  public func request(publicAddress: Swift.String, method: Swift.String, parameters: [any Swift.Encodable]) -> RxSwift.Single<SwiftyJSON.JSON>
  @objc deinit
}
extension AuthCoreAdapter : ConnectCommon.ParticleAdapter {
  public func getUserInfo() -> ParticleNetworkBase.UserInfo?
  public func openAccountAndSecurity() -> RxSwift.Single<Swift.Void>
  public func switchChain(_ chainInfo: ParticleNetworkChains.ChainInfo) -> RxSwift.Single<ParticleNetworkBase.UserInfo?>
  public func changeMasterPassword() -> RxSwift.Single<Swift.Void>
}
