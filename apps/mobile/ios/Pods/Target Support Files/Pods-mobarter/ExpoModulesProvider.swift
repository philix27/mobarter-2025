/**
 * Automatically generated by expo-modules-autolinking.
 *
 * This autogenerated class provides a list of classes of native Expo modules,
 * but only these that are written in Swift and use the new API for creating Expo modules.
 */

import ExpoModulesCore
import ExpoNativeExtensions
import Expo
import ExpoAppleAuthentication
import EXApplication
import ExpoAsset
import ExpoBlur
import ExpoClipboard
import EXConstants
import ExpoCrypto
import ExpoFileSystem
import ExpoFont
import ExpoHaptics
import ExpoKeepAwake
import ExpoLinking
import ExpoHead
import ExpoSecureStore
import ExpoSplashScreen
import ExpoSymbols
import ExpoSystemUI
import ExpoWebBrowser
import ReactNativePasskeys

@objc(ExpoModulesProvider)
public class ExpoModulesProvider: ModulesProvider {
  public override func getModuleClasses() -> [AnyModule.Type] {
    return [
      ExpoNativeExtensionsModule.self,
      ExpoFetchModule.self,
      AppleAuthenticationModule.self,
      ApplicationModule.self,
      AssetModule.self,
      BlurViewModule.self,
      ClipboardModule.self,
      ConstantsModule.self,
      CryptoModule.self,
      FileSystemModule.self,
      FileSystemNextModule.self,
      FontLoaderModule.self,
      HapticsModule.self,
      KeepAwakeModule.self,
      ExpoLinkingModule.self,
      ExpoHeadModule.self,
      SecureStoreModule.self,
      SplashScreenModule.self,
      SymbolModule.self,
      ExpoSystemUIModule.self,
      WebBrowserModule.self,
      ReactNativePasskeysModule.self
    ]
  }

  public override func getAppDelegateSubscribers() -> [ExpoAppDelegateSubscriber.Type] {
    return [
      FileSystemBackgroundSessionHandler.self,
      LinkingAppDelegateSubscriber.self,
      ExpoHeadAppDelegateSubscriber.self,
      SplashScreenAppDelegateSubscriber.self
    ]
  }

  public override func getReactDelegateHandlers() -> [ExpoReactDelegateHandlerTupleType] {
    return [
    ]
  }

  public override func getAppCodeSignEntitlements() -> AppCodeSignEntitlements {
    return AppCodeSignEntitlements.from(json: #"{}"#)
  }
}
