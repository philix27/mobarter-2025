generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int                @id @default(autoincrement())
  firstname      String
  lastname       String
  middlename     String?
  email          String             @unique
  password       String
  country        Country
  created_at     DateTime?          @default(now())
  updated_at     DateTime?          @updatedAt
  bvn            String?
  bvn_status     CredentialsStatus? @default(NONE)
  nin            String?
  nin_status     CredentialsStatus? @default(NONE)
  home_address   String?
  phone          String?
  phone_verified Boolean?           @default(false)
  crypto_wallets CryptoWallets[]
  bank_accounts  BankAccount[]
}

enum Country {
  Nigeria
  Ghana
  Kenya
}

model CryptoWallets {
  id         Int       @id @default(autoincrement())
  address    String    @unique
  wallet_id  String
  chainType  ChainType
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  user_id    Int
  user       User?     @relation(fields: [user_id], references: [id])
}

enum ChainType {
  Ethereum
  Solana
  Cosmos
}

enum CredentialsStatus {
  REVIEW
  VALID
  FAILED
  NONE
}

model BankAccount {
  id           Int       @id @default(autoincrement())
  account_name String
  account_no   String
  bank_name    BankName
  created_at   DateTime? @default(now())
  updated_at   DateTime? @updatedAt
  user_id      Int
  user         User?     @relation(fields: [user_id], references: [id])
}

enum BankName {
  NG_ZENITH
  NG_GTB
  NG_UBA
  NG_FIDELITY
  NG_OPAY
  NG_MONIEPOINT
}

model Market {
  id         Int        @id @default(autoincrement())
  name       MarketName @unique
  img        String?
  created_at DateTime?  @default(now())
  updated_at DateTime?  @updatedAt
  traders    Traders[]
}

enum MarketName {
  BITMAMA
  CASHRAMP
  FONBANK
  ONERAMP
  TELEGRAM_WALLET
}

model Traders {
  id         Int         @id @default(autoincrement())
  name       String
  img        String?
  created_at DateTime?   @default(now())
  updated_at DateTime?   @updatedAt
  currencies PriceRate[]
  market_id  Int
  market     Market?     @relation(fields: [market_id], references: [id])
}

model PriceRate {
  id           Int          @id @default(autoincrement())
  name         CurrencyName
  img          String?
  buyRate      Int?
  sellRate     Int?
  currencyType CurrencyType
  trader_id    Int
  trader       Traders?     @relation(fields: [trader_id], references: [id])
  created_at   DateTime?    @default(now())
  updated_at   DateTime?    @updatedAt
}

enum CurrencyType {
  FIAT
  CRYPTO
}

enum CurrencyName {
  NGN
  BTC
  CUSD
  USDT
  USDTx
  ETH
}
